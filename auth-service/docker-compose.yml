version: '3.8'

networks:
  shopmind-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

services:
  # PostgreSQL Database for Keycloak
  postgres:
    image: postgres:15-alpine
    container_name: shopmind-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: shopmind-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_secure_password_2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: shopmind-keycloak
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Admin credentials
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_secure_password_2024
      
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_secure_password_2024
      
      # Hostname configuration
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      
      # HTTP configuration
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      
      # Proxy configuration for development
      KC_PROXY: edge
      
      # Logging
      KC_LOG_LEVEL: INFO
      
      # Health and metrics
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8081:8080"
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.12
    command: start-dev
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/8080' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shopmind-auth-service
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application config
      APP_NAME: auth-service
      SERVER_ADDRESS: ":8080"
      APP_ENV: development
      APP_DEBUG: "true"
      
      # Keycloak config (using container network)
      KEYCLOAK_REALM: ShopMindAI
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_ISSUER_URL: http://keycloak:8080/realms/ShopMindAI
      KEYCLOAK_JWKS_URL: http://keycloak:8080/realms/ShopMindAI/protocol/openid-connect/certs
      KEYCLOAK_AUTH_URL: http://keycloak:8080/realms/ShopMindAI/protocol/openid-connect/auth
      KEYCLOAK_TOKEN_URL: http://keycloak:8080/realms/ShopMindAI/protocol/openid-connect/token
      KEYCLOAK_USERINFO_URL: http://keycloak:8080/realms/ShopMindAI/protocol/openid-connect/userinfo
      KEYCLOAK_LOGOUT_URL: http://keycloak:8080/realms/ShopMindAI/protocol/openid-connect/logout
      KEYCLOAK_CLIENT_ID: auth-service
      KEYCLOAK_CLIENT_SECRET: 1rRvRfiy9BKYxmUBeHV6bkLBFsRfCTrX
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASS: admin_secure_password_2024
      
      # Database config (if needed for user metadata)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: keycloak
      DB_PASSWORD: keycloak_secure_password_2024
      DB_NAME: keycloak
      DB_SSLMODE: disable
      
      # Redis config
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_secure_password_2024
      REDIS_DB: 0
      
      # Security
      JWT_SIGNING_ALG: RS256
      ACCESS_TOKEN_TTL: 15m
      REFRESH_TOKEN_TTL: 7d
      
      # CORS
      CORS_ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:3080"
      CORS_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      CORS_ALLOWED_HEADERS: "Authorization,Content-Type"
      
      # Logging
      LOG_LEVEL: debug
    ports:
      - "8080:8080"
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.13
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:1.25-alpine
    container_name: shopmind-nginx
    restart: unless-stopped
    depends_on:
      - auth-service
      - keycloak
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.14
    profiles:
      - production

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: shopmind-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.15
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: shopmind-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: grafana_admin_password_2024
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    networks:
      shopmind-network:
        ipv4_address: 172.20.0.16
    profiles:
      - monitoring
